How to setup Jenkins in ubuntu instance (AWS):
--------------------------------------------
     yum update -y   -> Linux
sudo apt-get update -y  
 
sudo add-apt-repository ppa:openjdk-r/ppa 
 
sudo apt-get install openjdk-8-jdk 

ubuntu@ip-172-31-1-103:~$ java -version
openjdk version "1.8.0_292"
OpenJDK Runtime Environment (build 1.8.0_292-8u292-b10-0ubuntu1~20.04-b10)
OpenJDK 64-Bit Server VM (build 25.292-b10, mixed mode)
ubuntu@ip-172-31-1-103:~$
 
/usr/lib/jvm/java-8-openjdk-amd64/bin or,  ubuntu@ip-172-31-1-103:/usr/lib/jvm/java-8-openjdk-amd64/bin$

 
sudo wget https://mirrors.estointernet.in/apache/maven/maven-3/3.8.1/binaries/apache-maven-3.8.1-bin.tar.gz

 
sudo tar -xvf apache-maven-3.6.3-bin.tar.gz
 
sudo mv apache-maven-3.6.3 maven 

sudo chmod 777 -R maven /home/ubuntu/maven 

Go to home->/home/ubuntu/ ->vi .profile add below entries. 

JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 
export JAVA_HOME 
MAVEN_HOME=/home/ubuntu/maven 
export MAVEN_HOME 
M2=/home/ubuntu/maven/bin 
export M2 
PATH=$PATH:$M2:$JAVA_HOME/bin export PATH


press ESC
:wq   (save the file)

source .profile   (execute the file)

wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
sudo apt update 
sudo apt install jenkins

sudo systemctl start jenkins 
sudo systemctl status Jenkins 
sudo systemctl stop Jenkins 

or

sudo service jenkins status
sudo service jenkins restart
sudo service jenkins stop
sudo service jenkins start

Note: If you want change the default jenkins home directory.

/etc/default/jenkins  -> Ubuntu
/etc/sysconfig/jenkins -> linux


-------------------------------------------------------------------------------

Tomcat setup in Ubuntu instance (AWS):
--------------------------------------

sudo apt-get update 
 
sudo add-apt-repository ppa:openjdk-r/ppa 
 
sudo apt-get install openjdk-8-jdk 
 
/usr/lib/jvm/java-8-openjdk-amd64/bin 
 
/usr/lib/jvm/java-8-openjdk-amd64 
 

Go to home->/home/ubuntu/ ->vi .profile add below entries. 

JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 
export JAVA_HOME 
PATH=$PATH:$JAVA_HOME/bin export PATH

:wq

source .profile


Download the Tomcat server:
---------------------------

sudo wget https://mirrors.estointernet.in/apache/tomcat/tomcat-8/v8.5.64/bin/apache-tomcat-8.5.64.tar.gz

sudo tar -xvf apache-tomcat-8.5.64.tar.gz

sudo mv apache-tomcat-8.5.64 tomcat

sudo chmod 755 -R tomcat

How to start the tomcat server?

APACHE_HOME\bin
sudo ./startup.sh
sudo service tomcat status

MAC/Linux: 
sudo ./startup.sh

How to stop the tomcat server?
How to stop the tomcat server?
APACHE_HOME Dir\bin
shutdown.bat (OR) > catalina.bat stop

MAC/Linux: 
sudo ./shutdown.sh (OR) > catalina.sh stop


Admin Console:
==============
- Tomcat provides a web based administration console which can be started via the following link:
http://localhost:8080/manager/html

- Tomcat manager is the web application, using this we manage applications running 
on tomcat. By default access is restricted to this application.

- Remove the restriction to manager application

Open the /webapps/manager/META-INF/context.xml file and comment below tag.

<!--  <Value> .......</Value>  -->from this file.

- Add user to access tomcat manager application as follows.
Open the tomcat-users.xml file which is available in conf directory.
# The tomcat-users.xml file should look something like this:
sudo vi tomcat-users.xml

<tomcat-users>
<role rolename="manager"/>
	<role rolename="admin"/>
	<role rolename="manager-gui"/>  
    <role rolename="manager-script"/>
	<role rolename="manager-jmx"/>
    <role rolename="manager-status"/>
    <role rolename="admin-gui"/>
    <role rolename="admin-script"/>
	<user username="admin" password="admin" roles="admin,manager,manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script"/>
</tomcat-users>

Tomcat directory structure:
===========================

bin:
====
- It contains tomcat's binaries and startup scripts.
- Tomcat's shell and batch files are found in Tomcat's bin directory.  
- These files support "actions" beyond starting and stopping Tomcat.

Ex: startup.bat   -> windows
	startup.sh    -> linux/ubuntu/centos

conf:
=====
conf: 
- It contains global configuration applicable to all the webapps. 
- The default installation provides:
 . One Policy File: 
	 catalina.policy for specifying security policy.
 . Two Properties Files: 
	 catalina.properties and logging.properties,
 . Four Configuration XML Files: 
	 server.xml (Tomcat main configuration file, update the port number), 
	 web.xml (global web application deployment descriptors), 
	 context.xml (global Tomcat-specific configuration options),
	 tomcat-users.xml (a database of user, password and role for authentication and access control).
- The conf also contain a sub-directory for each engine, e.g., Catalina, which in turn contains a 
sub-sub-directory for each of its hosts, e.g., localhost. 
- You can place the host-specific context information (similar to context.xml, but named as webapp.xml for each webapp under the host).

lib:
=== 
- Keeps the JAR-file that are available to all webapps. 
- The default installation include servlet-api.jar (Servlet), jasper.jar (JSP) and jasper-el.jar (EL). 
- You may also keep the JAR files of external package here, such as MySQL JDBC driver (mysql-connector-java-5.1.{xx}-bin.jar) 
and JSTL (jstl.jar and standard.jar).

logs: 
====
- Contains the engine logfile Catalina.{yyyy-mm-dd}.log, host logfile localhost.{yyyy-mm-dd}.log, and other application logfiles such as manger and host-manager. 
- The access log (created by the AccessLogValve) is also kept here.

webapps:
=====
- The default appBase - web applications base directory of the host localhost.

work: 
=====
- Contains the translated servlet source files and classes of JSP/JSF. 
- Organized in hierarchy of engine name (Catalina), host name (localhost), webapp name, followed by the Java classes package structure.

temp: 
====
- temporary files.

Port number changein in Tomcat:
===============================
Go to the conf directory and open the server.xml and you will find below lines.
 <Connector port="8080" protocol="HTTP/1.1"
 connectionTimeout="20000"
 redirectPort="8443" />
Replace the 8080 with any port number.

-------------------------------------------------------------------------------